{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Hello, welcome to my website. This website is mainly for me to share knowledge to friends, families, to my future self even, also to showcase my projects and experiences in my journey not just in software, but life as well. Enjoy your stay. Contacts Email joekanesiew@outlook.com Itch.io https://jakesiewjk64.itch.io/ GitHub https://github.com/JakeSiewJK64 Experiences 2023 | Coastal Hectare Sdn. Bhd. (Kakitangan) | Full-Stack Software Developer | August 2023 - now | Technologies: | React | tanstack | typescript | tailwind | linux | docker | django | github 2022 | Deloitte Malaysia | Internship | January, 2022 - March, 2022 | Phishing Campaign Support | OWASP Top 10 | Data Aggregation and Excel Reporting | AWS 2021 | AliHealth Sdn. Bhd. (Doctor2U) | Internship | April, 2021 - July, 2021 | To help with development of web product both frontend and backend. | Technologies Used: | Framework: ASP.net | Languages: Typescript (for Angular Frontend) and C# (Backend API Scripting). | HTML and CSS for web design. | Used Azure Data Studio and SQL to query and inspect database tables. | Version Control: Github Desktop | Package Manager: | - npm for frontend | - Nuget Package Manager for backend | Projects Involved in: | - Lab Information System (LIS) | - Doctor2u Shop = https://shop.doctor2u.my/ | - Merchant Portal | - Airport Website = https://airport.doctor2u.my/ | - Airlines Merchant Portal | - Lovvy Pharmacy Job Request Portal | - BP Corporate Portal | AiButler | Internship | January, 2021 - March, 2021 | - Created Android Application (APK) to wrap AIB4.0 web application HTML. | - Designed Java program for Cartonization process. | - Maintained CSS of AIB4.0 web application. | Technologies Learnt: | - Eclipse IDE | - Version Control: Subversion and Tortoise SVN | - Database: PostgreSQL | - Android WebView API for HTML wrapper | - CSS Framework: Bootstrap | - openJDK 11 | - WildFly Web Server | - Build Tool: Apache Maven | - Database for APK: SQLite | Domain Knowledge: | - Warehousing and Logistics Berkhidmat Untuk Negara! / \u30de\u30ec\u30a4\u30b8\u30e3\u306e\u70ba\uff01 \ud83d\udcaa\ud83d\udcaa\ud83d\udcaa","title":"Home"},{"location":"#home","text":"Hello, welcome to my website. This website is mainly for me to share knowledge to friends, families, to my future self even, also to showcase my projects and experiences in my journey not just in software, but life as well. Enjoy your stay.","title":"Home"},{"location":"#contacts","text":"Email joekanesiew@outlook.com Itch.io https://jakesiewjk64.itch.io/ GitHub https://github.com/JakeSiewJK64","title":"Contacts"},{"location":"#experiences","text":"2023 | Coastal Hectare Sdn. Bhd. (Kakitangan) | Full-Stack Software Developer | August 2023 - now | Technologies: | React | tanstack | typescript | tailwind | linux | docker | django | github 2022 | Deloitte Malaysia | Internship | January, 2022 - March, 2022 | Phishing Campaign Support | OWASP Top 10 | Data Aggregation and Excel Reporting | AWS 2021 | AliHealth Sdn. Bhd. (Doctor2U) | Internship | April, 2021 - July, 2021 | To help with development of web product both frontend and backend. | Technologies Used: | Framework: ASP.net | Languages: Typescript (for Angular Frontend) and C# (Backend API Scripting). | HTML and CSS for web design. | Used Azure Data Studio and SQL to query and inspect database tables. | Version Control: Github Desktop | Package Manager: | - npm for frontend | - Nuget Package Manager for backend | Projects Involved in: | - Lab Information System (LIS) | - Doctor2u Shop = https://shop.doctor2u.my/ | - Merchant Portal | - Airport Website = https://airport.doctor2u.my/ | - Airlines Merchant Portal | - Lovvy Pharmacy Job Request Portal | - BP Corporate Portal | AiButler | Internship | January, 2021 - March, 2021 | - Created Android Application (APK) to wrap AIB4.0 web application HTML. | - Designed Java program for Cartonization process. | - Maintained CSS of AIB4.0 web application. | Technologies Learnt: | - Eclipse IDE | - Version Control: Subversion and Tortoise SVN | - Database: PostgreSQL | - Android WebView API for HTML wrapper | - CSS Framework: Bootstrap | - openJDK 11 | - WildFly Web Server | - Build Tool: Apache Maven | - Database for APK: SQLite | Domain Knowledge: | - Warehousing and Logistics Berkhidmat Untuk Negara! / \u30de\u30ec\u30a4\u30b8\u30e3\u306e\u70ba\uff01 \ud83d\udcaa\ud83d\udcaa\ud83d\udcaa","title":"Experiences"},{"location":"security/verify-downloads/","text":"Verifying downloads the other day i needed to verify my download to ensure it was not tampered with during transit, a common way to do this is to use gpg to verify the download using the pgp certificate and download signature. Step 1: import the certificate the website where you downloded the package should come with a download signature and an OpenPGP certificate. you can import the certificate like so: gpg --import ThomasV.asc which should give the following output gpg: key 2BD5824B7F9470E6: \"Thomas Voegtlin (https://electrum.org) <thomasv@electrum.org>\" not changed gpg: Total number processed: 1 gpg: unchanged: 1 Step 2: download the download signature after importing the certificate, you need to also download the download signature used to sign the download. The file extension is also .asc . Step 3: verify the download now that you have both certificate and download signature, you can finally verify the download like so: gpg --verify electrum-4.5.8-x86_64.AppImage.asc which should give this output gpg: assuming signed data in 'electrum-4.5.8-x86_64.AppImage' gpg: Signature made Wed 23 Oct 2024 03:13:28 PM +08 gpg: using RSA key 637DB1E23370F84AFF88CCE03152347D07DA627C gpg: Can't check signature: No public key gpg: Signature made Wed 23 Oct 2024 02:03:11 PM +08 gpg: using RSA key 0EEDCFD5CAFB459067349B23CA9EEEC43DF911DC gpg: Can't check signature: No public key gpg: Signature made Wed 23 Oct 2024 11:26:58 AM +08 gpg: using RSA key 6694D8DE7BE8EE5631BED9502BD5824B7F9470E6 gpg: Good signature from \"Thomas Voegtlin (https://electrum.org) <thomasv@electrum.org>\" [unknown] gpg: aka \"ThomasV <thomasv1@gmx.de>\" [unknown] gpg: aka \"Thomas Voegtlin <thomasv1@gmx.de>\" [unknown] gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 6694 D8DE 7BE8 EE56 31BE D950 2BD5 824B 7F94 70E6 Download has been corrupted in the event a download has been tampered during transmission, the output should show a message \"BAD signature...\" gpg: Signature made Sa 23 Dez 2017 17:13:01 CET gpg: using RSA key EE1B0E6B2D8387B7 gpg: BAD signature from \"Scott R. Shinn <scott@atomicorp.com>\" [unknown] References: How to verify a file using an asc signature file","title":"Verifying downloads"},{"location":"security/verify-downloads/#verifying-downloads","text":"the other day i needed to verify my download to ensure it was not tampered with during transit, a common way to do this is to use gpg to verify the download using the pgp certificate and download signature.","title":"Verifying downloads"},{"location":"security/verify-downloads/#step-1-import-the-certificate","text":"the website where you downloded the package should come with a download signature and an OpenPGP certificate. you can import the certificate like so: gpg --import ThomasV.asc which should give the following output gpg: key 2BD5824B7F9470E6: \"Thomas Voegtlin (https://electrum.org) <thomasv@electrum.org>\" not changed gpg: Total number processed: 1 gpg: unchanged: 1","title":"Step 1: import the certificate"},{"location":"security/verify-downloads/#step-2-download-the-download-signature","text":"after importing the certificate, you need to also download the download signature used to sign the download. The file extension is also .asc .","title":"Step 2: download the download signature"},{"location":"security/verify-downloads/#step-3-verify-the-download","text":"now that you have both certificate and download signature, you can finally verify the download like so: gpg --verify electrum-4.5.8-x86_64.AppImage.asc which should give this output gpg: assuming signed data in 'electrum-4.5.8-x86_64.AppImage' gpg: Signature made Wed 23 Oct 2024 03:13:28 PM +08 gpg: using RSA key 637DB1E23370F84AFF88CCE03152347D07DA627C gpg: Can't check signature: No public key gpg: Signature made Wed 23 Oct 2024 02:03:11 PM +08 gpg: using RSA key 0EEDCFD5CAFB459067349B23CA9EEEC43DF911DC gpg: Can't check signature: No public key gpg: Signature made Wed 23 Oct 2024 11:26:58 AM +08 gpg: using RSA key 6694D8DE7BE8EE5631BED9502BD5824B7F9470E6 gpg: Good signature from \"Thomas Voegtlin (https://electrum.org) <thomasv@electrum.org>\" [unknown] gpg: aka \"ThomasV <thomasv1@gmx.de>\" [unknown] gpg: aka \"Thomas Voegtlin <thomasv1@gmx.de>\" [unknown] gpg: WARNING: This key is not certified with a trusted signature! gpg: There is no indication that the signature belongs to the owner. Primary key fingerprint: 6694 D8DE 7BE8 EE56 31BE D950 2BD5 824B 7F94 70E6","title":"Step 3: verify the download"},{"location":"security/verify-downloads/#download-has-been-corrupted","text":"in the event a download has been tampered during transmission, the output should show a message \"BAD signature...\" gpg: Signature made Sa 23 Dez 2017 17:13:01 CET gpg: using RSA key EE1B0E6B2D8387B7 gpg: BAD signature from \"Scott R. Shinn <scott@atomicorp.com>\" [unknown]","title":"Download has been corrupted"},{"location":"security/verify-downloads/#references","text":"How to verify a file using an asc signature file","title":"References:"}]}